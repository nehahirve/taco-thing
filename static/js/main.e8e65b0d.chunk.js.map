{"version":3,"sources":["logo.svg","TacoListItem.js","TacoList.js","Recipe.js","heart.svg","arrow.svg","TacoGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["TacoListItem","props","handleClick","bind","console","log","this","generateTaco","tacoName","recipe","image","className","onClick","src","alt","React","Component","TacoList","tacoList","tacos","map","taco","index","isVisible","Recipe","children","TacoGenerator","fetchTaco","arrow","likeTaco","heart","App","toggletacoListVisible","state","tacoListVisible","setState","some","tacoObj","concat","requestOptions","method","redirect","fetch","then","response","json","name","regex","strippedTaco","replace","tacoRecipe","tacoImage","buttonText","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8e65b0d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e01ecb40.svg\";","import React from 'react'\n\nexport default class TacoListItem extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    console.log('click handled')\n    this.props.generateTaco(\n      this.props.tacoName,\n      this.props.recipe,\n      this.props.image\n    )\n  }\n\n  render() {\n    return (\n      <div className='taco-card-small' onClick={this.handleClick}>\n        <div className='taco-name'>\n          <h1>{this.props.tacoName}</h1>\n        </div>\n        <div className='taco-image'>\n          <img src={this.props.image} alt='' />\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport TacoListItem from './TacoListItem'\n\nexport default class TacoList extends React.Component {\n  componentDidUpdate() {\n    console.log(this.props.tacoList)\n  }\n\n  render() {\n    const tacos = this.props.tacoList.map((taco, index) => {\n      return (\n        <TacoListItem\n          tacoName={taco.tacoName}\n          image={taco.image}\n          recipe={taco.recipe}\n          generateTaco={this.props.generateTaco}\n          key={index}\n        />\n      )\n    })\n\n    if (this.props.isVisible) {\n      return <div>{tacos}</div>\n    } else return null\n  }\n}\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class Recipe extends React.Component {\n  render() {\n    const recipe = this.props.recipe\n    const image = this.props.image\n\n    return (\n      <div className='recipe-card'>\n        <div className='title-card'>\n          <div className='taco-recipe'>\n            <ReactMarkdown children={recipe} />\n          </div>\n          <div className='taco-image'>\n            <img src={image} alt='a randomly generated taco' />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","export default __webpack_public_path__ + \"static/media/heart.ab8d4f8a.svg\";","export default __webpack_public_path__ + \"static/media/arrow.9275f0f5.svg\";","import React from 'react'\nimport Recipe from './Recipe'\nimport heart from './heart.svg'\nimport arrow from './arrow.svg'\n\nexport default class TacoGenerator extends React.Component {\n  render() {\n    const likeButtonText = 'Like'\n\n    if (this.props.isVisible) {\n      return (\n        <div className='taco-generator'>\n          <div className='taco-buttons'>\n            <button className='get-taco-button' onClick={this.props.fetchTaco}>\n              <span className='arrow'>\n                <img src={arrow} alt='' />\n              </span>\n              <span>Not delicious? Taco 'nother chance ðŸŒ®</span>\n            </button>\n            <button className='like-button' onClick={this.props.likeTaco}>\n              <span>\n                <img className='heart' src={heart} alt='' />\n              </span>\n              <span>{likeButtonText}</span>\n            </button>\n          </div>\n          <Recipe recipe={this.props.recipe} image={this.props.image} />\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n}\n","import React from 'react'\nimport logo from './logo.svg'\n\nimport TacoList from './TacoList'\nimport TacoGenerator from './TacoGenerator'\n\nimport './styles/reset.css'\nimport './styles/App.css'\n\nexport default class App extends React.Component {\n  constructor() {\n    super()\n    this.fetchTaco = this.fetchTaco.bind(this)\n    this.toggletacoListVisible = this.toggletacoListVisible.bind(this)\n    this.likeTaco = this.likeTaco.bind(this)\n    this.generateTaco = this.generateTaco.bind(this)\n    this.state = { tacoListVisible: false, tacoList: [] }\n  }\n\n  componentDidMount() {\n    this.fetchTaco()\n  }\n\n  toggletacoListVisible() {\n    this.setState({ tacoListVisible: !this.state.tacoListVisible })\n  }\n\n  likeTaco() {\n    const taco = {\n      tacoName: this.state.tacoName,\n      image: this.state.image,\n      recipe: this.state.recipe\n    }\n    if (\n      !this.state.tacoList.some(tacoObj => tacoObj.tacoName === taco.tacoName)\n    ) {\n      this.setState({ tacoList: this.state.tacoList.concat(taco) })\n    }\n  }\n\n  async fetchTaco() {\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    }\n    const url = 'https://taco-randomizer.herokuapp.com/random/?full-taco=true'\n    const taco = await fetch(url, requestOptions).then(response =>\n      response.json()\n    )\n    console.log(taco.name)\n    const tacoName = taco.name\n    // remove images from markdown\n    const regex = /!\\[(.*?)\\]\\((.*?)\\)/g\n    const strippedTaco = taco.recipe.replace(regex, '')\n\n    // const imageUrl =\n    //   'https://api.unsplash.com/photos/random?client_id=yJn8cRgfTyy6hKHZ-Ce3ZcFCW8i62gdc4TDKz1jBZ_w&query=taco'\n\n    // const tacoImage = await fetch(imageUrl)\n    //   .then(response => response.json())\n    //   .then(image => image.urls.small)\n\n    this.setState({\n      recipe: strippedTaco,\n      image:\n        'https://repository-images.githubusercontent.com/199493546/d2739980-b53b-11e9-9622-4b4307910050',\n      tacoName: tacoName\n    })\n  }\n\n  generateTaco(tacoName, tacoRecipe, tacoImage) {\n    this.setState({\n      recipe: tacoRecipe,\n      image: tacoImage,\n      tacoName: tacoName,\n      tacoListVisible: false\n    })\n  }\n\n  render() {\n    const buttonText = this.state.tacoListVisible ? 'Random Taco' : 'Favourites'\n    return (\n      <>\n        <header>\n          <div className='top-bar'>\n            <img src={logo} alt='Tacothing logo' />\n            <button className='my-tacos' onClick={this.toggletacoListVisible}>\n              {buttonText}\n            </button>\n          </div>\n        </header>\n        <main>\n          <TacoGenerator\n            recipe={this.state.recipe}\n            image={this.state.image}\n            fetchTaco={this.fetchTaco}\n            isVisible={!this.state.tacoListVisible}\n            likeTaco={this.likeTaco}\n          />\n          <TacoList\n            isVisible={this.state.tacoListVisible}\n            tacoList={this.state.tacoList}\n            generateTaco={this.generateTaco}\n          />\n        </main>\n      </>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}