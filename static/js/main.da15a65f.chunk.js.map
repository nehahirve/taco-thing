{"version":3,"sources":["logo.svg","components/TacoListItem.js","components/TacoList.js","components/Recipe.js","heart.svg","arrow.svg","components/TacoGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["TacoListItem","props","handleClick","bind","this","generateTaco","tacoName","recipe","image","className","onClick","src","alt","React","Component","TacoList","console","log","tacoList","tacos","map","taco","index","isVisible","Recipe","handleLinkClick","e","preventDefault","correctedUrl","target","getAttribute","slice","window","location","renderers","link","children","TacoGenerator","likeButtonText","some","fetchTaco","arrow","likeTaco","heart","App","toggletacoListVisible","state","tacoListVisible","setState","tacoObj","filter","concat","requestOptions","method","redirect","fetch","then","response","json","name","regex","strippedTaco","replace","urls","small","tacoImage","tacoRecipe","buttonText","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da15a65f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e01ecb40.svg\";","import React from 'react'\n\nexport default class TacoListItem extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    this.props.generateTaco(\n      this.props.tacoName,\n      this.props.recipe,\n      this.props.image\n    )\n  }\n\n  render() {\n    return (\n      <div className='taco-card-small' onClick={this.handleClick}>\n        <div className='taco-image'>\n          <img src={this.props.image} alt='a randomly generated taco' />\n        </div>\n        <div className='taco-name'>\n          <h1>{this.props.tacoName}</h1>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport TacoListItem from './TacoListItem'\n\nexport default class TacoList extends React.Component {\n  componentDidUpdate() {\n    console.log(this.props.tacoList)\n  }\n\n  render() {\n    const tacos = this.props.tacoList.map((taco, index) => {\n      return (\n        <TacoListItem\n          tacoName={taco.tacoName}\n          image={taco.image}\n          recipe={taco.recipe}\n          generateTaco={this.props.generateTaco}\n          key={index}\n        />\n      )\n    })\n\n    if (this.props.isVisible) {\n      return <div>{tacos}</div>\n    } else return null\n  }\n}\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nexport default class Recipe extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleLinkClick = this.handleLinkClick.bind(this)\n  }\n\n  handleLinkClick(e) {\n    // kind of a hack fix, needs to be improved\n    e.preventDefault()\n    const correctedUrl =\n      'https://taco-randomizer.herokuapp.com' +\n      e.target.getAttribute('href').slice(0, -3)\n    window.location = correctedUrl\n  }\n\n  render() {\n    const recipe = this.props.recipe\n    const image = this.props.image\n    const renderers = {\n      link: props => {\n        return <a {...props} onClick={e => this.handleLinkClick(e)} />\n      }\n    }\n    return (\n      <div className='recipe-card'>\n        <div className='title-card'>\n          <div className='taco-recipe'>\n            <ReactMarkdown children={recipe} renderers={renderers} />\n          </div>\n          <div className='taco-image'>\n            <img src={image} alt='a randomly generated taco' />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","export default __webpack_public_path__ + \"static/media/heart.ab8d4f8a.svg\";","export default __webpack_public_path__ + \"static/media/arrow.9275f0f5.svg\";","import React from 'react'\nimport Recipe from './Recipe'\nimport heart from '../heart.svg'\nimport arrow from '../arrow.svg'\n\nexport default class TacoGenerator extends React.Component {\n  render() {\n    const likeButtonText = this.props.tacoList.some(\n      taco => taco.tacoName === this.props.tacoName\n    )\n      ? 'Unike'\n      : 'Like'\n\n    if (this.props.isVisible) {\n      return (\n        <div className='taco-generator'>\n          <div className='taco-buttons'>\n            <button className='get-taco-button' onClick={this.props.fetchTaco}>\n              <span className='arrow'>\n                <img src={arrow} alt='' />\n              </span>\n              <span className='underline'>\n                Not delicious? Taco 'nother chance ðŸŒ®\n              </span>\n            </button>\n            <button className='like-button' onClick={this.props.likeTaco}>\n              <span>\n                <img className='heart' src={heart} alt='' />\n              </span>\n              <span>{likeButtonText}</span>\n            </button>\n          </div>\n          <Recipe recipe={this.props.recipe} image={this.props.image} />\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n}\n","import React from 'react'\nimport logo from './logo.svg'\n\nimport TacoList from './components/TacoList'\nimport TacoGenerator from './components/TacoGenerator'\n\nimport './styles/reset.css'\nimport './styles/App.css'\n\nexport default class App extends React.Component {\n  constructor() {\n    super()\n    this.fetchTaco = this.fetchTaco.bind(this)\n    this.toggletacoListVisible = this.toggletacoListVisible.bind(this)\n    this.likeTaco = this.likeTaco.bind(this)\n    this.generateTaco = this.generateTaco.bind(this)\n    this.state = { tacoListVisible: false, tacoList: [] }\n  }\n\n  componentDidMount() {\n    this.fetchTaco()\n  }\n\n  toggletacoListVisible() {\n    this.setState({ tacoListVisible: !this.state.tacoListVisible })\n  }\n\n  likeTaco() {\n    // adds and removes taco from favourites list\n    const taco = {\n      tacoName: this.state.tacoName,\n      image: this.state.image,\n      recipe: this.state.recipe\n    }\n    if (\n      !this.state.tacoList.some(tacoObj => tacoObj.tacoName === taco.tacoName)\n    ) {\n      this.setState({ tacoList: this.state.tacoList.concat(taco) })\n    } else {\n      this.setState({\n        tacoList: this.state.tacoList.filter(\n          tacoObj => tacoObj.tacoName !== taco.tacoName\n        )\n      })\n    }\n  }\n\n  async fetchTaco() {\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    }\n    const url = 'https://taco-randomizer.herokuapp.com/random/?full-taco=true'\n    const taco = await fetch(url, requestOptions).then(response =>\n      response.json()\n    )\n    console.log(taco.name)\n    const tacoName = taco.name\n\n    // removes any images from markdown data\n    const regex = /!\\[(.*?)\\]\\((.*?)\\)/g\n    const strippedTaco = taco.recipe.replace(regex, '')\n\n    const imageUrl =\n      'https://api.unsplash.com/photos/random?client_id=yJn8cRgfTyy6hKHZ-Ce3ZcFCW8i62gdc4TDKz1jBZ_w&query=taco'\n\n    const tacoImage = await fetch(imageUrl)\n      .then(response => response.json())\n      .then(image => image.urls.small)\n\n    this.setState({\n      recipe: strippedTaco,\n      image: tacoImage,\n      tacoName: tacoName\n    })\n  }\n\n  generateTaco(tacoName, tacoRecipe, tacoImage) {\n    this.setState({\n      recipe: tacoRecipe,\n      image: tacoImage,\n      tacoName: tacoName,\n      tacoListVisible: false\n    })\n  }\n\n  render() {\n    const buttonText = this.state.tacoListVisible\n      ? 'Generate Taco'\n      : 'Favourites'\n\n    return (\n      <>\n        <header>\n          <div className='top-bar'>\n            <img src={logo} alt='Tacothing logo' />\n            <button className='my-tacos' onClick={this.toggletacoListVisible}>\n              {buttonText}\n            </button>\n          </div>\n        </header>\n        <main>\n          <TacoGenerator\n            recipe={this.state.recipe}\n            image={this.state.image}\n            fetchTaco={this.fetchTaco}\n            isVisible={!this.state.tacoListVisible}\n            likeTaco={this.likeTaco}\n            tacoName={this.state.tacoName}\n            tacoList={this.state.tacoList}\n          />\n          <TacoList\n            isVisible={this.state.tacoListVisible}\n            tacoList={this.state.tacoList}\n            generateTaco={this.generateTaco}\n          />\n        </main>\n      </>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}